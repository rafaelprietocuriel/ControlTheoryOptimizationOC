function slMF = slicemanifold(dgObj0,idx,varargin)
%
% SLICEMANIFOLD returns the slice manifold(s) stored in dgObj0
%
% SLMF=SLICEMANIFOLD(dgObj0) returns a cell arry of slice manifold(s) stored
% in the 'Result' field 'SliceManifold' of dgObj0. If this filed does not
% exist it is generated by the initial points of 'ContinuationSolution'.

% variable declaration
slMF{1}=occurve();

contResultStruct=contresult(dgObj0,[],varargin{:});

if isempty(dgObj0) || isempty(contResultStruct)
    return
end

if nargin==1 || isempty(idx)
    idx=1:numel(contResultStruct);
end
try
    % if field SliceManifold exists
    slMF=cellfun(@getfield,contResultStruct(idx),repmat({'SliceManifold'},1,numel(idx)),'UniformOutput',false);
catch
    % otherwise generate from initial points of ContinuationSolution
    for ii=1:numel(idx)
        pt=[];
        pt.arcposition=[];
        if ~isfield(contResultStruct{idx(ii)},'ContinuationSolution');
            ocmatmsg('Neither field ''SliceManifold'' nor ''ContinuationSolution'' exist.')
            %return
        end
        for jj=1:numel(contResultStruct{idx(ii)}.ContinuationSolution)
            pt.y(:,jj)=contResultStruct{idx(ii)}.ContinuationSolution(jj).y(:,1);
        end
        pt.arcarg=contResultStruct{idx(ii)}.ContinuationSolution(jj).arcarg(ones(1,jj));
        pt.modelname=contResultStruct{idx(ii)}.ContinuationSolution(jj).modelname;
        slMF{ii}=occurve(pt);
    end
end