function out=$MODELNAME$CanonicalSystemImplicit($INDEPENDENT$,$DEPENDENTVAR$,$PARVAR$,$ARCVAR$)
% returns the canonical system, algebraic equations are replaced by its total time derivatives. 
% This approach makes it necessary to compute the inverse of the Hessian of the Pontryaginfunction 
% with respect to the control variables. The explicit symbolical computation may result in huge 
% algebraic expressions that slows down computation time. Therefore the inverse and product is done
% for the numerical expressions only. For the explicitly calculated version see
% 		$MODELNAME$CanonicalSystemExplicit
$INFODETAILS$
	
$PARAMETERVALUES$
	
$CONTROL$=$MODELNAME$OptimalControlImplicit($INDEPENDENT$,$DEPENDENTVAR$,$PARVAR$,$ARCVAR$);
	
!IF $CONSTRAINTNUM$!
[$LAGRANGEMULTCC$,$LAGRANGEMULTSC$]=$MODELNAME$LagrangeMultiplier($INDEPENDENT$,$DEPENDENTVAR$,$PARVAR$,$ARCVAR$);
	
!ENDIF!
!IF $EXOGENOUSFUNCTIONNUM$!
$EXOGENOUSFUNCTION$=$MODELNAME$ExogenousFunction($INDEPENDENT$,$DEPENDENTVAR$,$PARVAR$,$ARCVAR$);
	
!ENDIF!
	
DXDt=$CANONICALSYSTEM$
	
for ii=1:size($DEPENDENTVAR$,2)
	invLSM=$MODELNAME$InverseLeftSideMatrix($INDEPENDENT$,$DEPENDENTVAR$(:,ii),$PARVAR$,$ARCVAR$);
	RSV=$MODELNAME$RightSideVector($INDEPENDENT$,$DEPENDENTVAR$(:,ii),$PARVAR$,$ARCVAR$,DXDt(:,ii));
	tmp(:,ii)=invLSM*RSV;
end
	
!IF $NUMBEROFARCS$-1!
switch $ARCVAR$
!STARTADDARCCASE!
	case $ARCIDENTIFIERALGEBRAICEQUATION$
		DXDt=[DXDt;zeros($ARCALGEBRAICEQUATIONNUM$,size($DEPENDENTVAR$,2))];
		$OPTIMALCONTROLDYNAMICSINDEX$
	
!ENDADDARCCASE!
end
!ENDIF!
!IF ~($NUMBEROFARCS$-1)!
$OPTIMALCONTROLDYNAMICSINDEX$
!ENDIF!
out=DXDt;
	
%-------------------------------------------------------------------------
function out=$MODELNAME$InverseLeftSideMatrix($INDEPENDENT$,$DEPENDENTVAR$,$PARVAR$,$ARCVAR$)
	
$PARAMETERVALUES$
	
$CONTROL$=$MODELNAME$OptimalControl($INDEPENDENT$,$DEPENDENTVAR$,$PARVAR$,$ARCVAR$);
	
!IF $CONSTRAINTNUM$!
[$LAGRANGEMULTCC$,$LAGRANGEMULTSC$]=$MODELNAME$LagrangeMultiplier($INDEPENDENT$,$DEPENDENTVAR$,$PARVAR$,$ARCVAR$);
	
!ENDIF!
!IF $EXOGENOUSFUNCTIONNUM$!
$EXOGENOUSFUNCTION$=$MODELNAME$ExogenousFunction($INDEPENDENT$,$DEPENDENTVAR$,$PARVAR$,$ARCVAR$);
	
!ENDIF!
!IF $NUMBEROFARCS$-1!
switch $ARCVAR$
!STARTADDARCCASE!
	case $ARCIDENTIFIERCANONICALSYSTEMJACOBIAN$
		$OPTIMALCONTROLDYNAMICSLEFTSIDE$
	
!ENDADDARCCASE!
end
!ENDIF!
!IF ~($NUMBEROFARCS$-1)!
$OPTIMALCONTROLDYNAMICSLEFTSIDE$
!ENDIF!
out=inv(out);
	
%-------------------------------------------------------------------------
function out=$MODELNAME$RightSideVector($INDEPENDENT$,$DEPENDENTVAR$,$PARVAR$,$ARCVAR$,DXDt)
	
$PARAMETERVALUES$
	
$CONTROL$=$MODELNAME$OptimalControl($INDEPENDENT$,$DEPENDENTVAR$,$PARVAR$,$ARCVAR$);
	
!IF $CONSTRAINTNUM$!
[$LAGRANGEMULTCC$,$LAGRANGEMULTSC$]=$MODELNAME$LagrangeMultiplier($INDEPENDENT$,$DEPENDENTVAR$,$PARVAR$,$ARCVAR$);
	
!ENDIF!
!IF $EXOGENOUSFUNCTIONNUM$!
$EXOGENOUSFUNCTION$=$MODELNAME$ExogenousFunction($INDEPENDENT$,$DEPENDENTVAR$,$PARVAR$,$ARCVAR$);
	
!ENDIF!
	
PDuDX=$OPTIMALCONTROLDYNAMICSRIGHTSIDE$
!IF $NUMBEROFARCS$-1!
switch $ARCVAR$
!STARTADDARCCASE!
	case $ARCIDENTIFIERCANONICALSYSTEMJACOBIAN$
		$CONSTRAINEDOPTIMALCONTROLDYNAMICSRIGHTSIDE$
	
!ENDADDARCCASE!
end
!ENDIF!
!IF ~($NUMBEROFARCS$-1)!
$CONSTRAINEDOPTIMALCONTROLDYNAMICSRIGHTSIDE$
!ENDIF!
PDuDX=[PDuDX;tmp'];
out=-PDuDX*DXDt;