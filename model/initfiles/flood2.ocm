Type
standardmodel

Description
Optimal Control Model

Variable
state::ky,kd
control::c,jota



Statedynamics
%official formula:
% ode::Dky=((A*kd^teta)*ky^alpha-c-(1/pi*atan(eta*kd^2*(W-(1-zetad)*kd))+1/2)*(1-1/(1+W^2)))*(1-jota)-delta*ky
% ode::Dkd=((A*kd^teta)*ky^alpha-c-(1/pi*atan(eta*kd^2*(W-(1-zetad)*kd))+1/2)*(1-1/(1+W^2)))*jota-delta*kd
%introducing tau for a better numeric solution, kappa is weighting the damage of k_d, jota general&constant:
 ode::Dky=(A*ky^alpha-c)*(1-jota)-delta*ky-      tau*((1/pi*atan(eta*kd^2*(W-(1-zetad)*kd))+1/2)*(1-1/(1+W^2)))*ky
 ode::Dkd=(A*ky^alpha-c)*jota    -delta*kd-kappa*tau*((1/pi*atan(eta*kd^2*(W-(1-zetad)*kd))+1/2)*(1-1/(1+W^2)))*kd
%iota = d, introducing jotafix:
% ode::Dky=(A*ky^alpha-c)*(1-(jotafix+(1-jotafix)*tau*((1/pi*atan(eta*kd^2*(W-(1-zetad)*kd))+1/2)*(1-1/(1+W^2)))))-delta*ky-      tau*((1/pi*atan(eta*kd^2*(W-(1-zetad)*kd))+1/2)*(1-1/(1+W^2)))*ky
% ode::Dkd=(A*ky^alpha-c)*(jotafix+(1-jotafix)*tau*((1/pi*atan(eta*kd^2*(W-(1-zetad)*kd))+1/2)*(1-1/(1+W^2))))    -delta*kd-kappa*tau*((1/pi*atan(eta*kd^2*(W-(1-zetad)*kd))+1/2)*(1-1/(1+W^2)))*kd

Exogenousfunction
W::t

Objective
% the term kappa*Ef^2 is only introduced to derive the necessary optimality conditions automatically, even though the case of linear controls is not implemented up to now
expdisc::rho 
% int::log(c)
int::log(c)-epsilon*jota^2

Controlconstraint % identifier has to contain an alphabetic character
CC1::ineq::c>=clow
CC2::ineq::c<=(A*kd^teta)^(1-alpha)*ky^alpha
CC3::ineq::jota>=jotalow
CC4::ineq::jota<=jotahigh

ArcDefinition
0::[]
1::CC1
2::CC2
3::CC3
4::CC4

Parameter
rho::0.03 
teta::0.3
alpha::0.7
%jota::0.3
%jotafix::0.1
delta::0.1
A::0.8
zetad::0.5
clow::0
%sigma::0.5
eta::50
kappa::1
tau::1
epsilon::0.00001
jotalow::0
jotahigh::1
