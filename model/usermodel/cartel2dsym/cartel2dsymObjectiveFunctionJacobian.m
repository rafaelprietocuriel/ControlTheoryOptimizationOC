function out=cartel2dsymObjectiveFunctionJacobian(t,depvar,par,arcid)
% returns the Jacobian of the objective function for cartel2dsym
%
% this file was automatically created: 24-Aug-2024 15:01:54
% written by Dieter Grass, 2001 - 2024
	
r=par(1);
beta=par(2);
alpha=par(3);
rho=par(4);
theta=par(5);
omega=par(6);
delta=par(7);
h=par(8);
gamma1=par(9);
gamma2=par(10);
kappa=par(11);
eta=par(12);
ulow=par(13);
vlow=par(14);
w=par(15);
s=par(16);
b=par(17);
xi=par(18);
epsilon=par(19);
tau=par(20);
B=par(21);
	
% ctrl=cartel2dsymOptimalControl(t,depvar,par,arcid);
	
switch arcid
	case 0
		out=[exp(-r*t)*(-w*s*depvar(2)-(1-w)*h+gamma1*beta/(depvar(1)+epsilon)/(-1+alpha)*exp(-(-log(-gamma1/depvar(3)/eta/alpha)+beta*log(depvar(1)+epsilon))/(-1+alpha))), ...
			 exp(-r*t)*(-w*s*depvar(1)-(1-w)*h+gamma2*beta/(depvar(2)+epsilon)/(-1+alpha)*exp((log(-gamma2/depvar(4)/eta/alpha)-beta*log(depvar(2)+epsilon))/(-1+alpha))), ...
			 exp(-r*t)*gamma1/depvar(3)/(-1+alpha)*exp(-(-log(-gamma1/depvar(3)/eta/alpha)+beta*log(depvar(1)+epsilon))/(-1+alpha)), ...
			 exp(-r*t)*gamma2/depvar(4)/(-1+alpha)*exp((log(-gamma2/depvar(4)/eta/alpha)-beta*log(depvar(2)+epsilon))/(-1+alpha))];
	
	case 1
		out=[exp(-r*t)*(-w*s*depvar(2)-(1-w)*h), ...
			 exp(-r*t)*(-w*s*depvar(1)-(1-w)*h+gamma2*beta/(depvar(2)+epsilon)/(-1+alpha)*exp((log(-gamma2/depvar(4)/eta/alpha)-beta*log(depvar(2)+epsilon))/(-1+alpha))), ...
			 0, ...
			 exp(-r*t)*gamma2/depvar(4)/(-1+alpha)*exp((log(-gamma2/depvar(4)/eta/alpha)-beta*log(depvar(2)+epsilon))/(-1+alpha))];
	
	case 2
		out=[exp(-r*t)*(-w*s*depvar(2)-(1-w)*h+gamma1*beta/(depvar(1)+epsilon)/(-1+alpha)*exp(-(-log(-gamma1/depvar(3)/eta/alpha)+beta*log(depvar(1)+epsilon))/(-1+alpha))), ...
			 exp(-r*t)*(-w*s*depvar(1)-(1-w)*h), ...
			 exp(-r*t)*gamma1/depvar(3)/(-1+alpha)*exp(-(-log(-gamma1/depvar(3)/eta/alpha)+beta*log(depvar(1)+epsilon))/(-1+alpha)), ...
			 0];
	
	case 3
		out=[exp(-r*t)*(-w*s*depvar(2)-(1-w)*h+gamma1*beta/(depvar(1)+epsilon)/(-1+alpha)*exp(-(-log(-gamma1/depvar(3)/eta/alpha)+beta*log(depvar(1)+epsilon))/(-1+alpha))), ...
			 exp(-r*t)*(-w*s*depvar(1)-(1-w)*h+gamma2*beta/(depvar(2)+epsilon)/(-1+alpha)*exp((log(-gamma2/depvar(4)/eta/alpha)-beta*log(depvar(2)+epsilon))/(-1+alpha))), ...
			 exp(-r*t)*gamma1/depvar(3)/(-1+alpha)*exp(-(-log(-gamma1/depvar(3)/eta/alpha)+beta*log(depvar(1)+epsilon))/(-1+alpha)), ...
			 exp(-r*t)*gamma2/depvar(4)/(-1+alpha)*exp((log(-gamma2/depvar(4)/eta/alpha)-beta*log(depvar(2)+epsilon))/(-1+alpha))];
	
	case 4
		out=[exp(-r*t)*(-w*s*depvar(2)-(1-w)*h), ...
			 exp(-r*t)*(-w*s*depvar(1)-(1-w)*h), ...
			 0, ...
			 0];
	
	case 5
		out=[exp(-r*t)*(-w*s*depvar(2)-(1-w)*h), ...
			 exp(-r*t)*(-w*s*depvar(1)-(1-w)*h), ...
			 0, ...
			 0];
	
	case 6
		out=[exp(-r*t)*(-w*s*depvar(2)-(1-w)*h), ...
			 exp(-r*t)*(-w*s*depvar(1)-(1-w)*h+gamma2*beta/(depvar(2)+epsilon)/(-1+alpha)*exp((log(-gamma2/depvar(4)/eta/alpha)-beta*log(depvar(2)+epsilon))/(-1+alpha))), ...
			 0, ...
			 exp(-r*t)*gamma2/depvar(4)/(-1+alpha)*exp((log(-gamma2/depvar(4)/eta/alpha)-beta*log(depvar(2)+epsilon))/(-1+alpha))];
	
	case 7
		out=[exp(-r*t)*(-w*s*depvar(2)-(1-w)*h), ...
			 exp(-r*t)*(-w*s*depvar(1)-(1-w)*h), ...
			 0, ...
			 0];
	
	case 8
		out=[exp(-r*t)*(-w*s*depvar(2)-(1-w)*h+gamma1*beta/(depvar(1)+epsilon)/(-1+alpha)*exp(-(-log(-gamma1/depvar(3)/eta/alpha)+beta*log(depvar(1)+epsilon))/(-1+alpha))), ...
			 exp(-r*t)*(-w*s*depvar(1)-(1-w)*h), ...
			 exp(-r*t)*gamma1/depvar(3)/(-1+alpha)*exp(-(-log(-gamma1/depvar(3)/eta/alpha)+beta*log(depvar(1)+epsilon))/(-1+alpha)), ...
			 0];
	
	case 9
		out=[exp(-r*t)*(-w*s*depvar(2)-(1-w)*h), ...
			 exp(-r*t)*(-w*s*depvar(1)-(1-w)*h), ...
			 0, ...
			 0];
	
	case 10
		out=[exp(-r*t)*(-w*s*depvar(2)-(1-w)*h), ...
			 exp(-r*t)*(-w*s*depvar(1)-(1-w)*h), ...
			 0, ...
			 0];
	
	case 11
		out=[exp(-r*t)*(-w*s*depvar(2)-(1-w)*h), ...
			 exp(-r*t)*(-w*s*depvar(1)-(1-w)*h), ...
			 0, ...
			 0];
	
	case 12
		out=[exp(-r*t)*(-w*s*depvar(2)-(1-w)*h), ...
			 exp(-r*t)*(-w*s*depvar(1)-(1-w)*h), ...
			 0, ...
			 0];
	
	case 13
		out=[exp(-r*t)*(-w*s*depvar(2)-(1-w)*h), ...
			 exp(-r*t)*(-w*s*depvar(1)-(1-w)*h), ...
			 0, ...
			 0];
	
	case 14
		out=[exp(-r*t)*(-w*s*depvar(2)-(1-w)*h), ...
			 exp(-r*t)*(-w*s*depvar(1)-(1-w)*h), ...
			 0, ...
			 0];
	
end
